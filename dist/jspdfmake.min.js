"use strict";function _interopDefault(t){return t&&"object"==typeof t&&"default"in t?t.default:t}function JsPDFMake(t,e){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.docDefinition=e,this.options={orientation:"p",unit:"pt",format:"a4",hotfixes:[],lineHeight:DEFAULT_LINE_HEIGHT},this.doc=new JsPDF(this.options).setProperties({title:t}),this.title=t,this.pageWidth=this.doc.internal.pageSize.getWidth(),this.pageHeight=this.doc.internal.pageSize.getHeight(),this.pageXMargin=i.pageXMargin||0,this.pageYMargin=i.pageYMargin||0,this.maxLineWidth=this.pageWidth-2*this.pageXMargin,this.tocSections={},this.generateFromDocDefinition()}Object.defineProperty(exports,"__esModule",{value:!0});var JsPDF=_interopDefault(require("jspdf")),DEFAULT_FONT_SIZE=18,DEFAULT_LINE_HEIGHT=1,DEFAULT_ALIGN="left",DEFAULT_FONT_NAME="times",DEFAULT_FONT_STYLE="normal",DEFAULT_TEXT_COLOR="black";JsPDFMake.prototype.initTOC=function(){var t=this;this.docDefinition.content.filter(function(t){return t.toc}).forEach(function(e){var i=e.toc,n=Object.assign({},i);delete n.id,t.tocSections[i.id]={startingPage:0,items:[],options:n}})},JsPDFMake.prototype.renderTOC=function(){var t=this,e=this.doc,i=this.pageYMargin,n=this.tocSections,o=Object.values(n);o.forEach(function(n){var a=n.startingPage,r=n.items,s=i;e.setPage(a),t.addPage(),n.size=1,r.forEach(function(e){var i=e.title,n=e.pageNumber;o.forEach(function(t){var e=t.startingPage,i=t.size;return n>=e&&(n+=i)}),t.drawTextInLine({isLink:!0,text:i+" "+n,pageNumber:n},void 0,s,18,18),s+=20})}),console.log(n)},JsPDFMake.prototype.size=function(){return this.doc.internal.pages.length-1},JsPDFMake.prototype.addPage=function(){var t=this.doc,e=this.getCurrentPageNumber();e===this.size()?t.addPage():t.insertPage(e)},JsPDFMake.prototype.clearDoc=function(){for(var t=this.doc;t.internal.pages.length>1;)t.deletePage(1);this.addPage()},JsPDFMake.prototype.updateDocDefinition=function(t){this.docDefinition=t,this.generateFromDocDefinition()},JsPDFMake.prototype.getCurrentPageNumber=function(){return this.doc.internal.getCurrentPageInfo().pageNumber},JsPDFMake.prototype.isCursorOutOfPageVertically=function(t){return t>this.pageHeight-this.pageYMargin},JsPDFMake.prototype.drawTextInLine=function(t){var e=t.text,i=t.fontSize,n=t.fontName,o=t.fontStyle,a=t.textColor,r=t.xOffset,s=t.yOffset,f=t.pageNumber,g=t.maxFontSize,c=t.isLink,h=this.doc,p=i/2+i/4;return h.setPage(f).setFont(n,o).setFontSize(i).setTextColor(a),c?h.textWithLink(e,r,p+Math.max(i,g)-i+s,{pageNumber:f}):h.text(r,p+Math.max(i,g)-i+s,e),!0},JsPDFMake.prototype.drawParagraphs=function(t){var e=this;t.forEach(function(t){return t.forEach(function(t){for(;t.pageNumber>e.size();)e.addPage();e.drawTextInLine(t)})})},JsPDFMake.prototype.escapeSpecialCharacters=function(t){return t.replace(/[^A-Za-z 0-9 \n\t\.,\?""!@#\$%\^&\*\(\)-_=\+;:<>\/\\\|\}\{\[\]`~]*/g,"")},JsPDFMake.prototype.renderParagraph=function(t,e,i,n){var o=t.text,a=t.pageBreak,r=void 0===a?"none":a,s=t.fontSize,f=void 0===s?DEFAULT_FONT_SIZE:s,g=t.fontName,c=void 0===g?DEFAULT_FONT_NAME:g,h=t.fontStyle,p=void 0===h?DEFAULT_FONT_STYLE:h,u=t.textColor,d=void 0===u?DEFAULT_TEXT_COLOR:u,l=t.align,D=void 0===l?DEFAULT_ALIGN:l,P=t.marginTop,F=void 0===P?0:P,T=t.marginRight,m=void 0===T?0:T,x=t.marginBottom,v=void 0===x?0:x,M=t.marginLeft,E=void 0===M?0:M,O=t.tocIds,L=void 0===O?[]:O,y=t.tocItemText,_=this,N=this.doc,k=this.maxLineWidth,S=this.tocSections,C=this.pageXMargin,b=this.pageYMargin,J=this.pageWidth;if("string"!=typeof o)return console.warn("Text is only supported as string format, this section will not be rendered => "+o),{nextXOffset:e,nextYOffset:i,nextPage:n,lines:z};("before"===r||this.isCursorOutOfPageVertically(i+f))&&(i=b,n+=1),L.forEach(function(t){S[t].items.push({title:y||o,pageNumber:_.getCurrentPageNumber()})});var A=N.setFont(c,p).setFontSize(f).setTextColor(d).splitTextToSize(this.escapeSpecialCharacters(o),k-E-m);i+=F;var z=[];return A.forEach(function(t){_.isCursorOutOfPageVertically(i+f)&&(i=b,n+=1),e=C+E,"center"===D?e=J/2-N.getTextWidth(t)/2+E-m:"right"===D&&(e=J-N.getTextWidth(t)-C-m),z.push({text:t,fontSize:f,fontName:c,fontStyle:p,textColor:d,xOffset:e,yOffset:i,pageNumber:n,maxFontSize:f,isLink:!1}),i+=f}),i+=v,"after"===r&&(i=b,n+=1),{nextXOffset:e,nextYOffset:i,nextPage:n,lines:z}},JsPDFMake.prototype.transformContentToDrawables=function(t){var e=this,i=this.pageYMargin,n=void 0,o=1;return t.map(function(t){if(!t.toc){var a=e.renderParagraph(t,n,i,o),r=a.nextXOffset,s=a.nextYOffset,f=a.nextPage,g=a.lines;return i=s,n=r,o=f,g}}).filter(function(t){return t})},JsPDFMake.prototype.generateFromDocDefinition=function(){var t=this.docDefinition;this.clearDoc(),this.initTOC();var e=this.transformContentToDrawables(t.content);console.log(e),this.drawParagraphs(e)},JsPDFMake.prototype.download=function(){this.doc.save(this.title)},exports.JsPDFMake=JsPDFMake;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
